generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  username  String    @unique
  password  String
  email     String?
  name      String?
  lastLogin DateTime?
  active    Boolean   @default(true)

  @@index([username])
}

model Project {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  slug        String   @unique
  type        String
  location    String?
  description String?
  images      String?

  @@index([slug])
}

model Article {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  title         String
  slug          String   @unique
  excerpt       String?
  content       String?
  coverImageUrl String?
  tags          String?
  publishedAt   DateTime @default(now())
  published     Boolean  @default(true)

  @@index([slug])
  @@index([publishedAt])
}

model Job {
  id           String    @id @default(cuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  title        String
  slug         String    @unique
  department   String?
  location     String?
  description  String?
  published    Boolean   @default(true)
  benefits     String?
  deadline     DateTime?
  education    String?
  experience   String?
  imageUrl     String?
  requirements String?
  salary       String?
  type         String?

  @@index([slug])
}

model Application {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  name           String
  email          String
  cvUrl          String
  coverLetterUrl String?
  message        String?
  status         String   @default("nouveau")
}

model Feedback {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String
  company   String?
  project   String?
  rating    Int
  message   String
  published Boolean  @default(false)
  photoUrl  String?
}

model ContactMessage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  email     String
  message   String
}

model Newsletter {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  email     String   @unique
  active    Boolean  @default(true)

  @@index([email])
}

model Statistic {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  key       String   @unique
  value     String
  label     String
  order     Int      @default(0)
  active    Boolean  @default(true)

  @@index([key])
  @@index([order])
}

model Location {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  address   String
  city      String
  lat       Float
  lng       Float
  order     Int      @default(0)
  active    Boolean  @default(true)

  @@index([order])
}
